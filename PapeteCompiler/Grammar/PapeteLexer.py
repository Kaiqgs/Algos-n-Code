# Generated from Grammar/Papete.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\65")
        buf.write("\u0189\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7")
        buf.write("\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16")
        buf.write("\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23")
        buf.write("\3\23\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\27\3\27\3\27")
        buf.write("\3\30\3\30\3\30\3\31\3\31\3\31\3\32\3\32\3\32\3\33\3\33")
        buf.write("\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3 \3 \3")
        buf.write(" \3 \3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3#")
        buf.write("\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3")
        buf.write("%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(")
        buf.write("\3)\3)\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\5,\u0119\n,\3")
        buf.write(",\7,\u011c\n,\f,\16,\u011f\13,\3,\3,\3-\3-\7-\u0125\n")
        buf.write("-\f-\16-\u0128\13-\3.\5.\u012b\n.\3.\3.\5.\u012f\n.\3")
        buf.write(".\7.\u0132\n.\f.\16.\u0135\13.\3.\6.\u0138\n.\r.\16.\u0139")
        buf.write("\3.\3.\5.\u013e\n.\6.\u0140\n.\r.\16.\u0141\3/\5/\u0145")
        buf.write("\n/\3/\6/\u0148\n/\r/\16/\u0149\3/\3/\6/\u014e\n/\r/\16")
        buf.write("/\u014f\3\60\5\60\u0153\n\60\3\60\6\60\u0156\n\60\r\60")
        buf.write("\16\60\u0157\3\61\3\61\3\61\3\61\7\61\u015e\n\61\f\61")
        buf.write("\16\61\u0161\13\61\3\61\3\61\3\61\3\61\3\61\3\62\3\62")
        buf.write("\3\62\3\62\7\62\u016c\n\62\f\62\16\62\u016f\13\62\3\62")
        buf.write("\3\62\3\63\6\63\u0174\n\63\r\63\16\63\u0175\3\63\3\63")
        buf.write("\3\64\3\64\3\64\3\64\7\64\u017e\n\64\f\64\16\64\u0181")
        buf.write("\13\64\3\64\5\64\u0184\n\64\3\64\3\64\3\64\3\64\3\u015f")
        buf.write("\2\65\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65\3\2\n\6\2\"\"")
        buf.write("\62;C\\c|\b\2\"\"\60\60\62<C\\aac|\4\2C\\c|\6\2\62;C\\")
        buf.write("aac|\3\2//\3\2\62;\4\2\f\f\17\17\5\2\13\f\17\17\"\"\2")
        buf.write("\u019b\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2")
        buf.write("\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2")
        buf.write("\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33")
        buf.write("\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2")
        buf.write("\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2")
        buf.write("\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2")
        buf.write("\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2")
        buf.write("\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3")
        buf.write("\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S")
        buf.write("\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2")
        buf.write("]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2")
        buf.write("\2g\3\2\2\2\3i\3\2\2\2\5k\3\2\2\2\7m\3\2\2\2\to\3\2\2")
        buf.write("\2\13q\3\2\2\2\rs\3\2\2\2\17u\3\2\2\2\21w\3\2\2\2\23y")
        buf.write("\3\2\2\2\25{\3\2\2\2\27}\3\2\2\2\31\177\3\2\2\2\33\u0081")
        buf.write("\3\2\2\2\35\u0093\3\2\2\2\37\u009a\3\2\2\2!\u009f\3\2")
        buf.write("\2\2#\u00a5\3\2\2\2%\u00a9\3\2\2\2\'\u00af\3\2\2\2)\u00b1")
        buf.write("\3\2\2\2+\u00b3\3\2\2\2-\u00b6\3\2\2\2/\u00b9\3\2\2\2")
        buf.write("\61\u00bc\3\2\2\2\63\u00bf\3\2\2\2\65\u00c2\3\2\2\2\67")
        buf.write("\u00c5\3\2\2\29\u00c8\3\2\2\2;\u00cd\3\2\2\2=\u00d3\3")
        buf.write("\2\2\2?\u00d8\3\2\2\2A\u00dc\3\2\2\2C\u00e2\3\2\2\2E\u00e9")
        buf.write("\3\2\2\2G\u00f0\3\2\2\2I\u00f5\3\2\2\2K\u00fd\3\2\2\2")
        buf.write("M\u0102\3\2\2\2O\u0109\3\2\2\2Q\u010b\3\2\2\2S\u010d\3")
        buf.write("\2\2\2U\u010f\3\2\2\2W\u0116\3\2\2\2Y\u0122\3\2\2\2[\u013f")
        buf.write("\3\2\2\2]\u0144\3\2\2\2_\u0152\3\2\2\2a\u0159\3\2\2\2")
        buf.write("c\u0167\3\2\2\2e\u0173\3\2\2\2g\u0179\3\2\2\2ij\7\60\2")
        buf.write("\2j\4\3\2\2\2kl\7*\2\2l\6\3\2\2\2mn\7\62\2\2n\b\3\2\2")
        buf.write("\2op\7+\2\2p\n\3\2\2\2qr\7.\2\2r\f\3\2\2\2st\7#\2\2t\16")
        buf.write("\3\2\2\2uv\7-\2\2v\20\3\2\2\2wx\7?\2\2x\22\3\2\2\2yz\7")
        buf.write("/\2\2z\24\3\2\2\2{|\7,\2\2|\26\3\2\2\2}~\7\61\2\2~\30")
        buf.write("\3\2\2\2\177\u0080\7\'\2\2\u0080\32\3\2\2\2\u0081\u0082")
        buf.write("\7i\2\2\u0082\u0083\7t\2\2\u0083\u0084\7c\2\2\u0084\u0085")
        buf.write("\7o\2\2\u0085\u0086\7c\2\2\u0086\u0087\7v\2\2\u0087\u0088")
        buf.write("\7k\2\2\u0088\u0089\7e\2\2\u0089\u008a\7c\2\2\u008a\u008b")
        buf.write("\7g\2\2\u008b\u008c\7z\2\2\u008c\u008d\7v\2\2\u008d\u008e")
        buf.write("\7g\2\2\u008e\u008f\7p\2\2\u008f\u0090\7u\2\2\u0090\u0091")
        buf.write("\7c\2\2\u0091\u0092\7q\2\2\u0092\34\3\2\2\2\u0093\u0094")
        buf.write("\7k\2\2\u0094\u0095\7o\2\2\u0095\u0096\7r\2\2\u0096\u0097")
        buf.write("\7q\2\2\u0097\u0098\7t\2\2\u0098\u0099\7v\2\2\u0099\36")
        buf.write("\3\2\2\2\u009a\u009b\7v\2\2\u009b\u009c\7t\2\2\u009c\u009d")
        buf.write("\7w\2\2\u009d\u009e\7g\2\2\u009e \3\2\2\2\u009f\u00a0")
        buf.write("\7h\2\2\u00a0\u00a1\7c\2\2\u00a1\u00a2\7n\2\2\u00a2\u00a3")
        buf.write("\7u\2\2\u00a3\u00a4\7g\2\2\u00a4\"\3\2\2\2\u00a5\u00a6")
        buf.write("\7h\2\2\u00a6\u00a7\7q\2\2\u00a7\u00a8\7t\2\2\u00a8$\3")
        buf.write("\2\2\2\u00a9\u00aa\7y\2\2\u00aa\u00ab\7j\2\2\u00ab\u00ac")
        buf.write("\7k\2\2\u00ac\u00ad\7n\2\2\u00ad\u00ae\7g\2\2\u00ae&\3")
        buf.write("\2\2\2\u00af\u00b0\7@\2\2\u00b0(\3\2\2\2\u00b1\u00b2\7")
        buf.write(">\2\2\u00b2*\3\2\2\2\u00b3\u00b4\7@\2\2\u00b4\u00b5\7")
        buf.write("?\2\2\u00b5,\3\2\2\2\u00b6\u00b7\7>\2\2\u00b7\u00b8\7")
        buf.write("?\2\2\u00b8.\3\2\2\2\u00b9\u00ba\7?\2\2\u00ba\u00bb\7")
        buf.write("?\2\2\u00bb\60\3\2\2\2\u00bc\u00bd\7#\2\2\u00bd\u00be")
        buf.write("\7?\2\2\u00be\62\3\2\2\2\u00bf\u00c0\7~\2\2\u00c0\u00c1")
        buf.write("\7~\2\2\u00c1\64\3\2\2\2\u00c2\u00c3\7k\2\2\u00c3\u00c4")
        buf.write("\7h\2\2\u00c4\66\3\2\2\2\u00c5\u00c6\7(\2\2\u00c6\u00c7")
        buf.write("\7(\2\2\u00c78\3\2\2\2\u00c8\u00c9\7g\2\2\u00c9\u00ca")
        buf.write("\7n\2\2\u00ca\u00cb\7u\2\2\u00cb\u00cc\7g\2\2\u00cc:\3")
        buf.write("\2\2\2\u00cd\u00ce\7r\2\2\u00ce\u00cf\7t\2\2\u00cf\u00d0")
        buf.write("\7k\2\2\u00d0\u00d1\7p\2\2\u00d1\u00d2\7v\2\2\u00d2<\3")
        buf.write("\2\2\2\u00d3\u00d4\7o\2\2\u00d4\u00d5\7c\2\2\u00d5\u00d6")
        buf.write("\7k\2\2\u00d6\u00d7\7p\2\2\u00d7>\3\2\2\2\u00d8\u00d9")
        buf.write("\7k\2\2\u00d9\u00da\7p\2\2\u00da\u00db\7v\2\2\u00db@\3")
        buf.write("\2\2\2\u00dc\u00dd\7h\2\2\u00dd\u00de\7n\2\2\u00de\u00df")
        buf.write("\7q\2\2\u00df\u00e0\7c\2\2\u00e0\u00e1\7v\2\2\u00e1B\3")
        buf.write("\2\2\2\u00e2\u00e3\7f\2\2\u00e3\u00e4\7q\2\2\u00e4\u00e5")
        buf.write("\7w\2\2\u00e5\u00e6\7d\2\2\u00e6\u00e7\7n\2\2\u00e7\u00e8")
        buf.write("\7g\2\2\u00e8D\3\2\2\2\u00e9\u00ea\7u\2\2\u00ea\u00eb")
        buf.write("\7v\2\2\u00eb\u00ec\7t\2\2\u00ec\u00ed\7k\2\2\u00ed\u00ee")
        buf.write("\7p\2\2\u00ee\u00ef\7i\2\2\u00efF\3\2\2\2\u00f0\u00f1")
        buf.write("\7x\2\2\u00f1\u00f2\7q\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f4")
        buf.write("\7f\2\2\u00f4H\3\2\2\2\u00f5\u00f6\7d\2\2\u00f6\u00f7")
        buf.write("\7q\2\2\u00f7\u00f8\7q\2\2\u00f8\u00f9\7n\2\2\u00f9\u00fa")
        buf.write("\7g\2\2\u00fa\u00fb\7c\2\2\u00fb\u00fc\7p\2\2\u00fcJ\3")
        buf.write("\2\2\2\u00fd\u00fe\7t\2\2\u00fe\u00ff\7g\2\2\u00ff\u0100")
        buf.write("\7c\2\2\u0100\u0101\7f\2\2\u0101L\3\2\2\2\u0102\u0103")
        buf.write("\7t\2\2\u0103\u0104\7g\2\2\u0104\u0105\7v\2\2\u0105\u0106")
        buf.write("\7w\2\2\u0106\u0107\7t\2\2\u0107\u0108\7p\2\2\u0108N\3")
        buf.write("\2\2\2\u0109\u010a\7}\2\2\u010aP\3\2\2\2\u010b\u010c\7")
        buf.write("\177\2\2\u010cR\3\2\2\2\u010d\u010e\7=\2\2\u010eT\3\2")
        buf.write("\2\2\u010f\u0110\7i\2\2\u0110\u0111\7n\2\2\u0111\u0112")
        buf.write("\7q\2\2\u0112\u0113\7d\2\2\u0113\u0114\7c\2\2\u0114\u0115")
        buf.write("\7n\2\2\u0115V\3\2\2\2\u0116\u0118\7$\2\2\u0117\u0119")
        buf.write("\t\2\2\2\u0118\u0117\3\2\2\2\u0118\u0119\3\2\2\2\u0119")
        buf.write("\u011d\3\2\2\2\u011a\u011c\t\3\2\2\u011b\u011a\3\2\2\2")
        buf.write("\u011c\u011f\3\2\2\2\u011d\u011b\3\2\2\2\u011d\u011e\3")
        buf.write("\2\2\2\u011e\u0120\3\2\2\2\u011f\u011d\3\2\2\2\u0120\u0121")
        buf.write("\7$\2\2\u0121X\3\2\2\2\u0122\u0126\t\4\2\2\u0123\u0125")
        buf.write("\t\5\2\2\u0124\u0123\3\2\2\2\u0125\u0128\3\2\2\2\u0126")
        buf.write("\u0124\3\2\2\2\u0126\u0127\3\2\2\2\u0127Z\3\2\2\2\u0128")
        buf.write("\u0126\3\2\2\2\u0129\u012b\7-\2\2\u012a\u0129\3\2\2\2")
        buf.write("\u012a\u012b\3\2\2\2\u012b\u012c\3\2\2\2\u012c\u012e\7")
        buf.write("$\2\2\u012d\u012f\t\2\2\2\u012e\u012d\3\2\2\2\u012e\u012f")
        buf.write("\3\2\2\2\u012f\u0133\3\2\2\2\u0130\u0132\t\3\2\2\u0131")
        buf.write("\u0130\3\2\2\2\u0132\u0135\3\2\2\2\u0133\u0131\3\2\2\2")
        buf.write("\u0133\u0134\3\2\2\2\u0134\u0136\3\2\2\2\u0135\u0133\3")
        buf.write("\2\2\2\u0136\u0138\7$\2\2\u0137\u012a\3\2\2\2\u0138\u0139")
        buf.write("\3\2\2\2\u0139\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a")
        buf.write("\u013d\3\2\2\2\u013b\u013c\7-\2\2\u013c\u013e\5Y-\2\u013d")
        buf.write("\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u0140\3\2\2\2")
        buf.write("\u013f\u0137\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u013f\3")
        buf.write("\2\2\2\u0141\u0142\3\2\2\2\u0142\\\3\2\2\2\u0143\u0145")
        buf.write("\t\6\2\2\u0144\u0143\3\2\2\2\u0144\u0145\3\2\2\2\u0145")
        buf.write("\u0147\3\2\2\2\u0146\u0148\t\7\2\2\u0147\u0146\3\2\2\2")
        buf.write("\u0148\u0149\3\2\2\2\u0149\u0147\3\2\2\2\u0149\u014a\3")
        buf.write("\2\2\2\u014a\u014b\3\2\2\2\u014b\u014d\7\60\2\2\u014c")
        buf.write("\u014e\t\7\2\2\u014d\u014c\3\2\2\2\u014e\u014f\3\2\2\2")
        buf.write("\u014f\u014d\3\2\2\2\u014f\u0150\3\2\2\2\u0150^\3\2\2")
        buf.write("\2\u0151\u0153\t\6\2\2\u0152\u0151\3\2\2\2\u0152\u0153")
        buf.write("\3\2\2\2\u0153\u0155\3\2\2\2\u0154\u0156\t\7\2\2\u0155")
        buf.write("\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157\u0155\3\2\2\2")
        buf.write("\u0157\u0158\3\2\2\2\u0158`\3\2\2\2\u0159\u015a\7\61\2")
        buf.write("\2\u015a\u015b\7,\2\2\u015b\u015f\3\2\2\2\u015c\u015e")
        buf.write("\13\2\2\2\u015d\u015c\3\2\2\2\u015e\u0161\3\2\2\2\u015f")
        buf.write("\u0160\3\2\2\2\u015f\u015d\3\2\2\2\u0160\u0162\3\2\2\2")
        buf.write("\u0161\u015f\3\2\2\2\u0162\u0163\7,\2\2\u0163\u0164\7")
        buf.write("\61\2\2\u0164\u0165\3\2\2\2\u0165\u0166\b\61\2\2\u0166")
        buf.write("b\3\2\2\2\u0167\u0168\7\61\2\2\u0168\u0169\7\61\2\2\u0169")
        buf.write("\u016d\3\2\2\2\u016a\u016c\n\b\2\2\u016b\u016a\3\2\2\2")
        buf.write("\u016c\u016f\3\2\2\2\u016d\u016b\3\2\2\2\u016d\u016e\3")
        buf.write("\2\2\2\u016e\u0170\3\2\2\2\u016f\u016d\3\2\2\2\u0170\u0171")
        buf.write("\b\62\2\2\u0171d\3\2\2\2\u0172\u0174\t\t\2\2\u0173\u0172")
        buf.write("\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0173\3\2\2\2\u0175")
        buf.write("\u0176\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0178\b\63\2")
        buf.write("\2\u0178f\3\2\2\2\u0179\u017a\7\61\2\2\u017a\u017b\7\61")
        buf.write("\2\2\u017b\u017f\3\2\2\2\u017c\u017e\n\b\2\2\u017d\u017c")
        buf.write("\3\2\2\2\u017e\u0181\3\2\2\2\u017f\u017d\3\2\2\2\u017f")
        buf.write("\u0180\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u017f\3\2\2\2")
        buf.write("\u0182\u0184\7\17\2\2\u0183\u0182\3\2\2\2\u0183\u0184")
        buf.write("\3\2\2\2\u0184\u0185\3\2\2\2\u0185\u0186\7\f\2\2\u0186")
        buf.write("\u0187\3\2\2\2\u0187\u0188\b\64\2\2\u0188h\3\2\2\2\26")
        buf.write("\2\u0118\u011d\u0126\u012a\u012e\u0133\u0139\u013d\u0141")
        buf.write("\u0144\u0149\u014f\u0152\u0157\u015f\u016d\u0175\u017f")
        buf.write("\u0183\3\b\2\2")
        return buf.getvalue()


class PapeteLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    GRAMATICA = 13
    IMPORT = 14
    TRUE = 15
    FALSE = 16
    FOR = 17
    WHILE = 18
    GRT = 19
    LESS = 20
    GRTEQ = 21
    LESSEQ = 22
    EQ = 23
    NEQ = 24
    OR = 25
    IF = 26
    AND = 27
    ELSE = 28
    PRINT = 29
    MAIN = 30
    INT = 31
    FLOAT = 32
    DOUBLE = 33
    STRING = 34
    VOID = 35
    BOOL = 36
    READ = 37
    RET = 38
    OBR = 39
    CBR = 40
    EOL = 41
    GLOBAL = 42
    STRVALUE = 43
    VAR = 44
    PRINTCONC = 45
    NUMDOUBLE = 46
    NUMINT = 47
    COMMENT = 48
    LINE_COMMENT = 49
    WS = 50
    COM = 51

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'.'", "'('", "'0'", "')'", "','", "'!'", "'+'", "'='", "'-'", 
            "'*'", "'/'", "'%'", "'gramaticaextensao'", "'import'", "'true'", 
            "'false'", "'for'", "'while'", "'>'", "'<'", "'>='", "'<='", 
            "'=='", "'!='", "'||'", "'if'", "'&&'", "'else'", "'print'", 
            "'main'", "'int'", "'float'", "'double'", "'string'", "'void'", 
            "'boolean'", "'read'", "'return'", "'{'", "'}'", "';'", "'global'" ]

    symbolicNames = [ "<INVALID>",
            "GRAMATICA", "IMPORT", "TRUE", "FALSE", "FOR", "WHILE", "GRT", 
            "LESS", "GRTEQ", "LESSEQ", "EQ", "NEQ", "OR", "IF", "AND", "ELSE", 
            "PRINT", "MAIN", "INT", "FLOAT", "DOUBLE", "STRING", "VOID", 
            "BOOL", "READ", "RET", "OBR", "CBR", "EOL", "GLOBAL", "STRVALUE", 
            "VAR", "PRINTCONC", "NUMDOUBLE", "NUMINT", "COMMENT", "LINE_COMMENT", 
            "WS", "COM" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "GRAMATICA", 
                  "IMPORT", "TRUE", "FALSE", "FOR", "WHILE", "GRT", "LESS", 
                  "GRTEQ", "LESSEQ", "EQ", "NEQ", "OR", "IF", "AND", "ELSE", 
                  "PRINT", "MAIN", "INT", "FLOAT", "DOUBLE", "STRING", "VOID", 
                  "BOOL", "READ", "RET", "OBR", "CBR", "EOL", "GLOBAL", 
                  "STRVALUE", "VAR", "PRINTCONC", "NUMDOUBLE", "NUMINT", 
                  "COMMENT", "LINE_COMMENT", "WS", "COM" ]

    grammarFileName = "Papete.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


